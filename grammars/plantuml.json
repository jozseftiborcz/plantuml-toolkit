{
    "scopeName": "source.plantuml",
    "name": "PlantUML",
    "fileTypes":[
        "pu", "puml", "plantuml"
    ],
    "uuid":"ca03e751-04ef-4330-9a6b-2199aae1c418",
    "patterns":[
        {
            "match": "^(\\s*|\\t*)(abstract|actor|agent|boundary|class|cloud|collections|component|control|database|entity|enum|interface|node|object|participant|queue|rectangle)\\s*(\".*\"|\\S+)\\s*(as)?\\s*(\\S*)",
            "name": "node.description.plantuml",
            "captures":{
                "2": { "name": "keyword.control.plantuml"},
                "3": { "name": "constant.string.plantuml" },
                "4": { "name": "keyword.control.plantuml" },
                "5": { "name": "support.function.plantuml"}
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(state)\\s*(\".*\")\\s*(as)\\s*(\\S+)\\s*(#[A-Za-z_0-9]+)?\\s*(:.*)?",
            "captures": {
                "2": { "name": "keyword.control.plantuml" },
                "3": { "name": "constant.string.plantuml" },
                "4": { "name": "keyword.control.plantuml" },
                "5": { "name": "support.function.plantuml"},
                "6": { "name": "variable.plantuml"},
                "7": { "name": "constant.string.plantuml" }
            }
        },
        {
            "name": "node.description.plantuml",
            "match": "^(\\s*|\\t*)(usecase)\\s*(\".*\"|\\S+)\\s*(#[A-Za-z_0-9]+)?\\s*(as)?\\s*(\".*)",
            "captures":{
                "2": { "name": "keyword.control.plantuml"},
                "3": { "name": "support.function.plantuml" },
                "4": { "name": "variable.plantuml"},
                "5": { "name": "keyword.control.plantuml" },
                "6": { "name": "constant.string.plantuml"}
            }
        },
        {
            "name": "node.description.plantuml",
            "match": "^(\\s*|\\t*)(usecase)\\s*(\".*\"|\\S+)",
            "captures":{
                "2": { "name": "keyword.control.plantuml"},
                "3": { "name": "support.function.plantuml" }
            }
        },
        {
            "begin": "(url\\()",
            "end": "(\\))",
            "name": "node.description.plantuml",
            "captures":{
                "0": { "name": "variable.plantuml"}
            },
            "patterns": [
                { "include": "$self" }
            ]
        },
        {
            "match":"\\s*#[A-Za-z_0-9]+\\s*",
            "name":"variable.plantuml"
        },
        {
            "match": "^(\\s*|\\t*)(@.*)\\s+(\\S*)",
            "name": "parameter.description.plantuml",
            "captures":{
                "2": {"name": "support.class.plantuml"},
                "3": {"name": "constant.string.plantuml"}
            }
        },
        {
            "match":"^(\\s*|\\t*)(end\\b)\\s+(note|legend|box|ref)",
            "name":"keyword.control.plantuml",
            "captures":{
                "2": {"name": "keyword.control.plantuml"},
                "3": {"name": "keyword.control.plantuml"}
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(note|rnote)\\s+(left|right|over|top|bottom)\\s*(of)?\\s*(\\S*)\\s*(#[A-Za-z_0-9]+)?",
            "captures": {
                "2": { "name": "keyword.control.plantuml" },
                "3": { "name": "keyword.control.plantuml" },
                "4": { "name": "keyword.control.plantuml" },
                "5": { "name": "support.function.plantuml"},
                "6": { "name": "variable.plantuml"}
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(ref)\\s+(over)\\s+(\\S.*)",
            "captures": {
                "2": { "name": "keyword.control.plantuml" },
                "3": { "name": "keyword.control.plantuml" },
                "4": { "name": "support.function.plantuml"}
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(note|rnote)\\s+(as)\\s+(\\S*)\\s*(#[A-Za-z_0-9]+)?",
            "captures": {
                "2": { "name": "keyword.control.plantuml" },
                "3": { "name": "keyword.control.plantuml" },
                "4": { "name": "support.function.plantuml" },
                "5": { "name": "variable.plantuml"}
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(activate|deactivate)\\s*(\\S*)",
            "captures": {
                "2": { "name": "keyword.control.plantuml" },
                "3": { "name": "support.function.plantuml" }
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(end|endif)\\s+(group|alt|else|if|loop|fork|})",
            "captures": {
                "2": { "name": "keyword.constant.plantuml" },
                "3": { "name": "keyword.constant.plantuml" }
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(end\\s*while)\\s+(.*)",
            "captures": {
                "2": { "name": "keyword.constant.plantuml" },
                "3": { "name": "constant.string.plantuml" }
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(if|elseif)\\s+(\\(.*\\))\\s+(then)\\s+(\\(.*\\))",
            "captures": {
                "2": { "name": "keyword.constant.plantuml" },
                "3": { "name": "constant.string.plantuml" },
                "4": { "name": "keyword.constant.plantuml" },
                "5": { "name": "constant.string.plantuml" }
            }
        },
            {
            "name":"keyword.constant.plantuml",
            "match":"^(\\s*|\\t*)(endif)",
            "captures":{
                "2": { "name": "keyword.constant.plantuml"}
            }
        },
        {
            "match":"^(\\s*|\\t*)(start\\b)",
            "name":"keyword.control.plantuml",
            "captures":{
                "2": {"name": "keyword.control.plantuml"}
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(repeat while)\\s+(\\(.*\\))\\s+(is)\\s+(\\(.*\\))",
            "captures": {
                "2": { "name": "keyword.constant.plantuml" },
                "3": { "name": "constant.string.plantuml" },
                "4": { "name": "keyword.constant.plantuml" },
                "5": { "name": "constant.string.plantuml" }
            }
        },
        {
            "name":"keyword.constant.plantuml",
            "match":"^(\\s*|\\t*)(group|alt|else|if|elseif|loop|fork|fork again|partition|while)\\s+(#[A-Za-z_0-9]+)?\\s+(.*)",
            "captures":{
                "2": { "name": "keyword.constant.plantuml"},
                "3": { "name": "variable.plantuml"},
                "4": { "name": "constant.string.plantuml"}
            }
        },
        {
            "name":"keyword.constant.plantuml",
            "match":"^(\\s*|\\t*)(group|alt|else|if|elseif|endif|loop|repeat|together|package)\\s+(.*)",
            "captures":{
                "2": { "name": "keyword.constant.plantuml"},
                "3": { "name": "constant.string.plantuml"}
            }
        },
        {
            "name":"keyword.constant.plantuml",
            "match":"^(\\s*|\\t*)(legend)\\s+(\\S*)?\\s+(\\S*)?",
            "captures":{
                "2": { "name": "keyword.control.plantuml"},
                "3": { "name": "keyword.control.plantuml"},
                "4": { "name": "keyword.control.plantuml"}
            }
        },
        {
            "match": "^(\\s*|\\t*)(skinparam)\\s(\\S*)(\\s[^\\{]*)",
            "name": "parameter.description.plantuml",
            "captures":{
                "2": {"name": "support.class.plantuml"},
                "3": {"name": "support.class.plantuml"},
                "4": {"name": "variable.plantuml"}
            }
        },
        {
            "match": "^(\\s*|\\t*)(top to bottom direction|left to right direction)",
            "name": "parameter.description.plantuml",
            "captures":{
                "2": {"name": "support.class.plantuml"}
            }
        },
        {
            "match": "^(\\s*|\\t*)(autonumber)\\s*(stop|resume)?\\s*(\\S*)\\s*(.*)",
            "name": "parameter.description.plantuml",
            "captures":{
                "2": {"name": "support.class.plantuml"},
                "3": {"name": "support.class.plantuml"},
                "4": {"name": "variable.plantuml"},
                "5": {"name": "variable.plantuml"}
            }
        },
        {
            "match": "^(\\s*|\\t*)(title|Title|end title|end Title)\\s(.*)",
            "name": "parameter.description.plantuml",
            "captures":{
                "2": {"name": "support.class.plantuml"},
                "3": {"name": "constant.string.plantuml"}
            }
        },
        {
            "match": "^(\\s*|\\t*)(center|left|right)\\s*(footer)\\s*(.*)",
            "name": "parameter.description.plantuml",
            "captures":{
                "2": {"name": "support.class.plantuml"},
                "3": {"name": "support.class.plantuml"},
                "4": {"name": "constant.string.plantuml"}
            }
        },
        {
            "match": "^(\\s*|\\t*)(newpage)",
            "name": "parameter.description.plantuml",
            "captures":{
                "2": {"name": "support.class.plantuml"}
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(box)\\s*(\".*\")\\s*(#[A-Za-z_0-9]+)?",
            "captures": {
                "2": { "name": "keyword.control.plantuml" },
                "3": { "name": "constant.string.plantuml" },
                "4": { "name": "variable.plantuml"}
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(!include|!includeurl|!define|!definelong|!enddefinelong|hide)\\s+(.*)",
            "captures": {
                "2": { "name": "support.class.plantuml" },
                "3": { "name": "keyword.control.plantuml" }
            }
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)([A-Za-z_0-9]+|\\[\\*\\])\\s*(<?}?-*|<?\\.*)(\\[dashed\\]|\\[hidden\\]|\\[#[A-Za-z_0-9]+\\])?(left|right|up|down)?(-*|\\.*)?(\\.>?|->?|-{)\\s*([A-Za-z_0-9]+|\\[\\*\\])\\s*(:.*)?",
            "captures": {
                "2": { "name": "support.function.plantuml" },
                "3": { "name": "keyword.control.plantuml" },
                "4": { "name": "variable.plantuml" },
                "5": { "name": "keyword.control.plantuml" },
                "6": { "name": "keyword.control.plantuml" },
                "7": { "name": "keyword.control.plantuml" },
                "8": { "name": "support.function.plantuml" }
            },
            "patterns": [
                { "include": "$self" }
            ]
        },
        {
            "name":"string.quoted.double.plantuml",
            "match":"^(\\s*|\\t*)(table\\(|Table\\()\\s*(\\S+)\\,\\s*(\".*\")(\\))",
            "captures": {
                "2": { "name": "keyword.control.plantuml" },
                "3": { "name": "support.function.plantuml" },
                "4": { "name": "constant.string.plantuml" },
                "5": { "name": "keyword.control.plantuml" }
            }
        },
        {
            "begin": "^(\\s*|\\t*|.*)\\s*(primary_key\\s*\\(|not_null\\s*\\(|secondary_key\\s*\\(|foreign_key\\s*\\(|unique\\s*\\(|new_column\\s*\\()",
            "end": "\\)\\s",
            "contentName":"support.function.plantuml",
            "captures": {
                "0": { "name": "keyword.control.plantuml" }
            },
            "patterns": [
                { "include": "$self" }
            ]
        },
        {
            "begin": "^(\\s*|\\t*)({method}\\s*|{field}\\s*)",
            "end": "\n",
            "contentName": "support.function.plantuml",
            "captures": {
                "0": { "name": "keyword.control.plantuml"}
            },
            "patterns": [
                { "include": "$self" }
            ]
        },
        {
            "match":"^(\\s*|\\t*)('.+)'?",
            "name":"comment.line.plantuml",
            "captures":{
                "2": { "name": "comment.line.plantuml"}
            }
        },
        {
            "name": "comment.block.plantuml",
            "begin": "/'",
            "end": "'/",
            "beginCaptures": {
                "0": {"name": "comment.line.plantuml"}
            }
        },
        {
            "match":"^(\\s*|\\t*)(end)",
            "name":"keyword.control.plantuml",
            "captures": {
                "2":{ "name": "keyword.control.plantuml"}
            }
        },
        {
            "match":"\\b[a-z_]+[A-Za-z_0-9]*\\b",
            "name":"variable.parameter.plantuml"
        },
        {
            "begin": "^(\\s*|\\t*)\\*[^\\*]",
            "end": "\n",
            "captures":{
                "0": { "name": "variable.plantuml"}
            },
            "patterns": [
                { "include": "$self" }
            ]
        },
        {
            "begin": "^(\\s*|\\t*)\\#",
            "end": "\n",
            "captures":{
                "0": { "name": "variable.plantuml"}
            },
            "patterns": [
                { "include": "$self" }
            ]
        },
        {
            "begin": "\\*{2}",
            "end": "\\*{2}",
            "contentName": "variable.plantuml",
            "captures":{
                "0": { "name": "variable.plantuml"}
            }
        },
        {
            "begin": "\"{2}",
            "end": "\"{2}",
            "contentName": "variable.plantuml",
            "captures":{
                "0": { "name": "variable.plantuml"}
            }
        },
        {
            "match":"(\\\\n|\\\\t)",
            "name":"support.function.plantuml",
            "captures":{
                "1": { "name": "support.function.plantuml"}
            }
        },
        {
            "begin": "\\{",
            "end": "\\}",
            "captures":{
                "0": { "name": "keyword.control.plantuml"}
            },
            "patterns": [
                { "include": "$self" }
            ]
        }
    ]
}
